# function_vs_method (특히, str.method)

# 함수 외우기
# 무엇을 외우냐에 따라 달라짐
# str.title() 외우면, upper(), lower(), join(), isdecimal() 등을 외우기는?
# 문자 메서드는 필요하면 그때그때 찾아서 사용

print('a'.zfill(4))  # zero_fill 4개의 글자까지 채워질 때까지 나머지를 0으로 채움

a = 'a'
while len(a) != 4:
    a = '0' + a
print(a)

# list의 메서드는 대체적으로 원본을 바꿈
# 메서드라는 것 자체가 ~의 함수
# 근데 어떤 것은 반환 값이 있거나 없음
    # 함수는 return 하는 것이 일이 아니라
    # input을 받아 처리하는 것이 함수가 하는 일
    # pop() 은 반환 값이 왜 있는가?
        # 리스트의 맨 뒤 값이 무엇인지 몰라서 무슨 값을 제거했는지 알기 위해
        # pop(number) 도 마찬가지
    # remove() 는 반환 값이 왜 없는가?
        # 인자 값을 애초에 알기 때문에 반환이 굳이 필요없어서
        # remove('b') 'b'를 삭제시킴 > 데이터의 흐름을 알 수 있음

# python은 함수의 return 값이 반드시 존재한다 (return 값을 정의 안하면 None)
# VS  함수는 어떤 값을 반드시 반환해야 한다 (x)

# 근데 문자열 메서드는 모두 반환값이 있는 것 같음
# 문자열은 원본이 수정 안되니까